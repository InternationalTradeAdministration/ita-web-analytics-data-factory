{
	"name": "RefreshSiteImprove",
	"properties": {
		"activities": [
			{
				"name": "ExecuteLoadDailyRefreshAnalyticsDatasets",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractDailyRefreshAnalyticsDatasetsByDatePeriod",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "LoadDailyRefreshAnalyticsDatasets",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "ExecuteExtractAnalyticsGroups",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractContentPages",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ExtractAnalyticsGroups",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "ExecuteExtractDailyRefreshAnalyticsDatasetsByDatePeriod",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractAnalyticsGroups",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ExtractDailyRefreshAnalyticsDatasetsByDatePeriod",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DatePeriod": {
							"value": "@variables('period')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ExecuteExtractQualityAssuranceDatasets",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "If Period equals yesterday",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ExtractQualityAssuranceDatasets",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "ExecuteLoadQualityAssuranceDatasets",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractQualityAssuranceDatasets",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "LoadQualityAssuranceDatasets",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "ExecuteExtractContentPages",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractQualityAssuranceDatasets",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ExtractContentPages",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "ExecuteLoadContentDatasets",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractContentPages",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "LoadContentDatasets",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "If Period equals yesterday",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.Period, 'yesterday')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set period to parameter value",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "period",
								"value": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set period to yesterday",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "period",
								"value": {
									"value": "@convertFromUtc(addDays(utcNow(), -1), 'Eastern Standard Time', 'yyyyMMdd')",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "PeriodIsEndofTheMonth",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ExecuteExtractDailyRefreshAnalyticsDatasetsByDatePeriod",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupEndOfMonth",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('period'), activity('LookupEndOfMonth').output.firstRow.EndOfMonth)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "ExtractMonthlyRefreshAnalyticsDatasets",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "LookupDateRangePeriod",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "ExtractMonthlyRefreshAnalyticsDatasets",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DateRangePeriod": {
										"value": "@activity('LookupDateRangePeriod').output.firstRow.DateRangePeriod",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "LoadMonthlyRefreshAnalyticsDatasets",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "ExtractMonthlyRefreshAnalyticsDatasets",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "LoadMonthlyRefreshAnalyticsDatasets",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true
							}
						},
						{
							"name": "LookupDateRangePeriod",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT CONCAT(CONVERT(char(8), DATEADD(DAY, 1, EOMONTH('@{variables('period')}', -1)), 112), '_', CONVERT(char(8), EOMONTH('@{variables('period')}'), 112)) AS DateRangePeriod",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SqlDataset",
									"type": "DatasetReference"
								}
							}
						}
					]
				}
			},
			{
				"name": "LookupEndOfMonth",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If Period equals yesterday",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT CONVERT(CHAR(8), EOMONTH('@{variables('period')}'), 112) AS EndOfMonth",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlDataset",
						"type": "DatasetReference"
					}
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"Period": {
				"type": "string",
				"defaultValue": "yesterday"
			}
		},
		"variables": {
			"period": {
				"type": "String"
			},
			"test": {
				"type": "Boolean"
			}
		},
		"annotations": []
	}
}