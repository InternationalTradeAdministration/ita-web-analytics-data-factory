{
	"name": "RefreshSiteImprove",
	"properties": {
		"activities": [
			{
				"name": "ExecuteLoadDailyRefreshAnalyticsDatasets",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractDailyRefreshAnalyticsDatasetsByDatePeriod",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "LoadDailyRefreshAnalyticsDatasets",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "ExecuteExtractAnalyticsGroups",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractContentPages",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ExtractAnalyticsGroups",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "ExecuteExtractDailyRefreshAnalyticsDatasetsByDatePeriod",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractAnalyticsGroups",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ExtractDailyRefreshAnalyticsDatasetsByDatePeriod",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DatePeriod": {
							"value": "@variables('period')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ExecuteExtractQualityAssuranceDatasets",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "If Period equals yesterday",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ExtractQualityAssuranceDatasets",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "ExecuteLoadQualityAssuranceDatasets",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractQualityAssuranceDatasets",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "LoadQualityAssuranceDatasets",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "ExecuteExtractContentPages",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractQualityAssuranceDatasets",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ExtractContentPages",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "ExecuteLoadContentDatasets",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteExtractContentPages",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "LoadContentDatasets",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "If Period equals yesterday",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.Period, 'yesterday')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set period to parameter value",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "period",
								"value": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set period to yesterday",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "period",
								"value": {
									"value": "@convertFromUtc(addDays(utcNow(), -1), 'Eastern Standard Time', 'yyyyMMdd')",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"Period": {
				"type": "string"
			}
		},
		"variables": {
			"period": {
				"type": "String"
			}
		},
		"annotations": []
	}
}