{
	"name": "ExtractFromAllVisitorFeedJson",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RootJsonFolderDataset",
						"type": "DatasetReference"
					},
					"name": "VisitorFeed"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "RootJsonFolderDataset",
						"type": "DatasetReference"
					},
					"name": "TriggersVisitorSessions"
				},
				{
					"dataset": {
						"referenceName": "RootJsonFolderDataset",
						"type": "DatasetReference"
					},
					"name": "VisitorSessions"
				}
			],
			"transformations": [
				{
					"name": "FlattenVisitorSessions"
				},
				{
					"name": "FlattenTriggerIds"
				},
				{
					"name": "FilterNullTriggerId"
				},
				{
					"name": "GroupByTriggerIdVisitorSessionId"
				},
				{
					"name": "AddOutputFilePathColumn"
				},
				{
					"name": "AddVisitorSessionOutputFilePathColumn"
				},
				{
					"name": "AddDateColumn"
				}
			],
			"script": "source(output(\n\t\tsessions as (duration as short, firstVisit as boolean, id as integer, pageViews as short, sessionStart as string, source as string, trackingPageIds as integer[], triggerIds as integer[], visitorId as integer)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'sourceFilePath',\n\tdocumentForm: 'documentPerLine',\n\twildcardPaths:[(\"visitor_feed/**/*.json\")]) ~> VisitorFeed\nAddDateColumn foldDown(unroll(sessions),\n\tmapColumn(\n\t\tduration = sessions.duration,\n\t\tfirstVisit = sessions.firstVisit,\n\t\tid = sessions.id,\n\t\tpageViews = sessions.pageViews,\n\t\tsessionStart = sessions.sessionStart,\n\t\tsource = sessions.source,\n\t\ttrackingPageIds = sessions.trackingPageIds,\n\t\ttriggerIds = sessions.triggerIds,\n\t\tvisitorId = sessions.visitorId,\n\t\tsourceFilePath,\n\t\tdate\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenVisitorSessions\nAddOutputFilePathColumn foldDown(unroll(triggerIds),\n\tmapColumn(\n\t\ttriggerId = triggerIds,\n\t\tvisitorSessionId = id,\n\t\toutputFilePath = outputFilePath\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenTriggerIds\nFlattenTriggerIds filter(not(isNull(triggerId))) ~> FilterNullTriggerId\nFilterNullTriggerId aggregate(groupBy(triggerId,\n\t\tvisitorSessionId,\n\t\toutputFilePath),\n\tcount = count()) ~> GroupByTriggerIdVisitorSessionId\nFlattenVisitorSessions derive(outputFilePath = \"triggers_visitor_sessions/{date}.json\") ~> AddOutputFilePathColumn\nFlattenVisitorSessions derive(outputFilePath = \"visitor_sessions/{date}.json\") ~> AddVisitorSessionOutputFilePathColumn\nVisitorFeed derive(date = split(sourceFilePath, '/')[3]) ~> AddDateColumn\nGroupByTriggerIdVisitorSessionId sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'outputFilePath',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TriggersVisitorSessions\nAddVisitorSessionOutputFilePathColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'outputFilePath',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> VisitorSessions"
		}
	}
}