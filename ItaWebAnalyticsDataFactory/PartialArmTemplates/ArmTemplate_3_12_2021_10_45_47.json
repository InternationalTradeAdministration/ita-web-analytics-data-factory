{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ItaWebAnalyticsDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsHistoricalMetricsByGroupIdPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsFilters",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsFiltersCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsFilter",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsFilters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsFilters').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ExtractByGroupIdFilterIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsHistoricalMetricsByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@pipeline().parameters.GroupId",
												"type": "Expression"
											},
											"FilterId": {
												"value": "@item().id",
												"type": "Expression"
											},
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											},
											"QueryString": {
												"value": "group_id=@{pipeline().parameters.GroupId}&filter_id=@{item().id}&period=@{pipeline().parameters.Period}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ExtractByGroupIdPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsHistoricalMetricsByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": {
									"value": "@pipeline().parameters.GroupId",
									"type": "Expression"
								},
								"FilterId": "1",
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								},
								"QueryString": {
									"value": "group_id=@{pipeline().parameters.GroupId}&period=@{pipeline().parameters.Period}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsHistoricalMetricsByParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsHistoricalMetricsByParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractAnalyticsHistoricalMetrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "analytics_group_id",
										"value": {
											"value": "@pipeline().parameters.GroupId",
											"type": "Expression"
										}
									},
									{
										"name": "analytics_filter_id",
										"value": {
											"value": "@pipeline().parameters.FilterId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$.links.next.href"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$"
										},
										"sink": {
											"path": "item"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"path": "analytics_group_id"
										}
									},
									{
										"source": {
											"path": "$['analytics_filter_id']"
										},
										"sink": {
											"path": "analytics_filter_id"
										}
									}
								],
								"collectionReference": "$['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "AnalyticsHistoricalMetricsRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": {
										"value": "@pipeline().parameters.QueryString",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AnalyticsHistoricalMetricsDataset",
								"type": "DatasetReference",
								"parameters": {
									"GroupId": {
										"value": "@pipeline().parameters.GroupId",
										"type": "Expression"
									},
									"Period": {
										"value": "@pipeline().parameters.Period",
										"type": "Expression"
									},
									"FilterId": {
										"value": "@pipeline().parameters.FilterId",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"concurrency": 20,
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"FilterId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					},
					"QueryString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AnalyticsHistoricalMetricsRestDataset')]",
				"[concat(variables('factoryId'), '/datasets/AnalyticsHistoricalMetricsDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsHistoricalMetricsByPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ExtractByPeriod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 5,
							"activities": [
								{
									"name": "ExtractByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsHistoricalMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@item().id",
												"type": "Expression"
											},
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "LookupAnalyticsFilters",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsFiltersCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsFilter",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "AnalyticsGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupAnalyticsFilters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsFilters').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExtractByFilterIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsHistoricalMetricsByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": "1",
											"FilterId": {
												"value": "@item().id",
												"type": "Expression"
											},
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											},
											"QueryString": {
												"value": "filter_id=@{item().id}&period=@{pipeline().parameters.Period}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ExtractByPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsHistoricalMetricsByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": "1",
								"FilterId": "1",
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								},
								"QueryString": {
									"value": "period=@{pipeline().parameters.Period}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsHistoricalMetricsByParameters')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsHistoricalMetricsByGroupIdPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsTrafficSourcesMetricsByGroupIdPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsFilters",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsFiltersCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsFilter",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsFilters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsFilters').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ExtractByGroupIdFilterIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsTrafficSourcesMetricsByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@pipeline().parameters.GroupId",
												"type": "Expression"
											},
											"FilterId": {
												"value": "@item().id",
												"type": "Expression"
											},
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											},
											"QueryString": {
												"value": "group_id=@{pipeline().parameters.GroupId}&filter_id=@{item().id}&period=@{pipeline().parameters.Period}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ExtractByGroupIdPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsTrafficSourcesMetricsByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": {
									"value": "@pipeline().parameters.GroupId",
									"type": "Expression"
								},
								"FilterId": "1",
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								},
								"QueryString": {
									"value": "group_id=@{pipeline().parameters.GroupId}&period=@{pipeline().parameters.Period}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsTrafficSourcesMetricsByParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsTrafficSourcesMetricsByParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractAnalyticsTrafficSourcesMetrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "analytics_group_id",
										"value": {
											"value": "@pipeline().parameters.GroupId",
											"type": "Expression"
										}
									},
									{
										"name": "analytics_filter_id",
										"value": {
											"value": "@pipeline().parameters.FilterId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$.links.next.href"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$"
										},
										"sink": {
											"path": "item"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"path": "analytics_group_id"
										}
									},
									{
										"source": {
											"path": "$['analytics_filter_id']"
										},
										"sink": {
											"path": "analytics_filter_id"
										}
									}
								],
								"collectionReference": "$['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "AnalyticsTrafficSourcesMetricsRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": {
										"value": "@pipeline().parameters.QueryString",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AnalyticsTrafficSourcesMetricsDataset",
								"type": "DatasetReference",
								"parameters": {
									"GroupId": {
										"value": "@pipeline().parameters.GroupId",
										"type": "Expression"
									},
									"Period": {
										"value": "@pipeline().parameters.Period",
										"type": "Expression"
									},
									"FilterId": {
										"value": "@pipeline().parameters.FilterId",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"concurrency": 20,
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"FilterId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					},
					"QueryString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AnalyticsTrafficSourcesMetricsRestDataset')]",
				"[concat(variables('factoryId'), '/datasets/AnalyticsTrafficSourcesMetricsDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsTrafficSourcesMetricsByPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ExtractByPeriod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 5,
							"activities": [
								{
									"name": "ExtractByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsTrafficSourcesMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@item().id",
												"type": "Expression"
											},
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "LookupAnalyticsFilters",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsFiltersCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsFilter",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "AnalyticsGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupAnalyticsFilters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsFilters').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExtractByFilterIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsTrafficSourcesMetricsByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": "1",
											"FilterId": {
												"value": "@item().id",
												"type": "Expression"
											},
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											},
											"QueryString": {
												"value": "filter_id=@{item().id}&period=@{pipeline().parameters.Period}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ExtractByPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsTrafficSourcesMetricsByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": "1",
								"FilterId": "1",
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								},
								"QueryString": {
									"value": "period=@{pipeline().parameters.Period}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsTrafficSourcesMetricsByParameters')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsTrafficSourcesMetricsByGroupIdPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByGroupIdPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractByGroupIdPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": {
									"value": "@pipeline().parameters.GroupId",
									"type": "Expression"
								},
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								},
								"QueryString": {
									"value": "group_id=@{pipeline().parameters.GroupId}&period=@{pipeline().parameters.Period}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractMonthlyAnalyticsExternalReferringDomainMetrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "analytics_group_id",
										"value": {
											"value": "@pipeline().parameters.GroupId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$.links.next.href"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$"
										},
										"sink": {
											"path": "item"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"path": "analytics_group_id"
										}
									}
								],
								"collectionReference": "$['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "MonthlyAnalyticsExternalReferringDomainMetricsRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": {
										"value": "@pipeline().parameters.QueryString",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MonthlyAnalyticsExternalReferringDomainMetricsDataset",
								"type": "DatasetReference",
								"parameters": {
									"GroupId": {
										"value": "@pipeline().parameters.GroupId",
										"type": "Expression"
									},
									"Period": {
										"value": "@pipeline().parameters.Period",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					},
					"QueryString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MonthlyAnalyticsExternalReferringDomainMetricsDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 5,
							"activities": [
								{
									"name": "ExtractByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@item().id",
												"type": "Expression"
											},
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ExtractByPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": "1",
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								},
								"QueryString": {
									"value": "period=@{pipeline().parameters.Period}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByGroupIdPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsOutboundLinkMetricsByGroupIdPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractByGroupIdPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractMonthlyAnalyticsOutboundLinkMetricsByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": {
									"value": "@pipeline().parameters.GroupId",
									"type": "Expression"
								},
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								},
								"QueryString": {
									"value": "group_id=@{pipeline().parameters.GroupId}&period=@{pipeline().parameters.Period}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsOutboundLinkMetricsByParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsOutboundLinkMetricsByParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractMonthlyAnalyticsOutboundLinkMetrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "analytics_group_id",
										"value": {
											"value": "@pipeline().parameters.GroupId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$.links.next.href"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$"
										},
										"sink": {
											"path": "item"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"path": "analytics_group_id"
										}
									}
								],
								"collectionReference": "$['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "MonthlyAnalyticsOutboundLinkMetricsRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": {
										"value": "@pipeline().parameters.QueryString",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MonthlyAnalyticsOutboundLinkMetricsDataset",
								"type": "DatasetReference",
								"parameters": {
									"GroupId": {
										"value": "@pipeline().parameters.GroupId",
										"type": "Expression"
									},
									"Period": {
										"value": "@pipeline().parameters.Period",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					},
					"QueryString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MonthlyAnalyticsOutboundLinkMetricsRestDataset')]",
				"[concat(variables('factoryId'), '/datasets/MonthlyAnalyticsOutboundLinkMetricsDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsOutboundLinkMetricsByPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 5,
							"activities": [
								{
									"name": "ExtractByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsOutboundLinkMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@item().id",
												"type": "Expression"
											},
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ExtractByPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractMonthlyAnalyticsOutboundLinkMetricsByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": "1",
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								},
								"QueryString": {
									"value": "period=@{pipeline().parameters.Period}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsOutboundLinkMetricsByParameters')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsOutboundLinkMetricsByGroupIdPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyRefreshAnalyticsDatasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractAnalyticsHistoricalMetricsByPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsHistoricalMetricsByPeriod",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Period": {
									"value": "@pipeline().parameters.DateRangePeriod",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecuteExtractAnalyticsTrafficSourcesMetricsByPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExtractAnalyticsHistoricalMetricsByPeriod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsTrafficSourcesMetricsByPeriod",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Period": {
									"value": "@pipeline().parameters.DateRangePeriod",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExtractMonthlyAnalyticsOutboundLinkMetricsByPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecuteExtractAnalyticsTrafficSourcesMetricsByPeriod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractMonthlyAnalyticsOutboundLinkMetricsByPeriod",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Period": {
									"value": "@pipeline().parameters.DateRangePeriod",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExtractMonthlyAnalyticsExternalReferringDomainMetrics",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExtractMonthlyAnalyticsOutboundLinkMetricsByPeriod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByPeriod",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Period": {
									"value": "@pipeline().parameters.DateRangePeriod",
									"type": "Expression"
								}
							}
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"DateRangePeriod": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsHistoricalMetricsByPeriod')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsTrafficSourcesMetricsByPeriod')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsOutboundLinkMetricsByPeriod')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadMonthlyRefreshAnalyticsDatasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadAnalyticsTrafficSourcesMetrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "analytics_traffic_sources_metrics",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE [web_analytics].[analytics_traffic_sources_metrics]",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['item']['direct_traffic']"
										},
										"sink": {
											"name": "direct_traffic",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['external_referrer']"
										},
										"sink": {
											"name": "external_referrer",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['search_domain']"
										},
										"sink": {
											"name": "search_domain",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['social_media']"
										},
										"sink": {
											"name": "social_media",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['timestamp']"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"name": "analytics_group_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['analytics_filter_id']"
										},
										"sink": {
											"name": "analytics_filter_id",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RootJsonFolderDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AnalyticsTrafficSourcesMetricsSqlDataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "LoadAnalyticsHistoricalMetrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "analytics_historical_metrics",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE [web_analytics].[analytics_historical_metrics]",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['item']['bounce_rate']"
										},
										"sink": {
											"name": "bounce_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['item']['new_visitors']"
										},
										"sink": {
											"name": "new_visitors",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['page_views']"
										},
										"sink": {
											"name": "page_views",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['returning_visitors']"
										},
										"sink": {
											"name": "returning_visitors",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['timestamp']"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['item']['unique_visitors']"
										},
										"sink": {
											"name": "unique_visitors",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['visits']"
										},
										"sink": {
											"name": "visits",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"name": "analytics_group_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['analytics_filter_id']"
										},
										"sink": {
											"name": "analytics_filter_id",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RootJsonFolderDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AnalyticsHistoricalMetricsSqlDataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "LoadMonthlyAnalyticsOutboundLinkMetrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "monthly_analytics_outbound_link_metrics",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE [web_analytics].[monthly_analytics_outbound_link_metrics]",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['item']['id']"
										},
										"sink": {
											"name": "analytics_outbound_link_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['title']"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['item']['url']"
										},
										"sink": {
											"name": "url",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['item']['pages']"
										},
										"sink": {
											"name": "pages",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['visits']"
										},
										"sink": {
											"name": "visits",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"name": "analytics_group_id",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RootJsonFolderDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "MonthlyAnalyticsOutboundLinkMetricsSqlDataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "LoadMonthlyExternalReferringDomain",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "monthly_analytics_external_referring_domain_metrics",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE web_analytics.monthly_analytics_external_referring_domain_metrics",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['item']['id']"
										},
										"sink": {
											"name": "analytics_external_domain_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['item']['bounce_rate']"
										},
										"sink": {
											"name": "bounce_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['item']['external_referring_domain']"
										},
										"sink": {
											"name": "external_referring_domain",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['item']['visits']"
										},
										"sink": {
											"name": "visits",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"name": "analytics_group_id",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RootJsonFolderDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "MonthlyAnalyticsExternalReferringDomainMetricsSqlDataset",
								"type": "DatasetReference"
							}
						]
					}
				],
				"concurrency": 1,
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RebuildAnalyticsDatasetsByAnalyticsGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.AnalyticsGroups",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "RebuildAnalyticsDatasetsByGroupIdStartDate",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "RebuildAnalyticsDatasetsByGroupIdStartDate",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@item().id",
												"type": "Expression"
											},
											"StartDate": {
												"value": "@item().start_date",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"AnalyticsGroups": {
						"type": "array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RebuildAnalyticsDatasetsByGroupIdStartDate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RebuildAnalyticsDatasetsByGroupIdStartDate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GenerateDatePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[web_analytics].[generate_date_periods]",
								"storedProcedureParameters": {
									"startDate": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.StartDate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "GenerateDateRangePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[web_analytics].[generate_date_range_periods]",
								"storedProcedureParameters": {
									"start_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.StartDate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RebuildAnalyticsHistoricalMetricsByGroupIdPeriods",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GenerateDateRangePeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RebuildAnalyticsHistoricalMetricsByGroupIdDateRangePeriods",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": {
									"value": "@pipeline().parameters.GroupId",
									"type": "Expression"
								},
								"DateRangePeriods": {
									"value": "@activity('GenerateDateRangePeriods').output.value",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "RebuildAnalyticsTrafficSourcesByGroupIdPeriods",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RebuildAnalyticsHistoricalMetricsByGroupIdPeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RebuildAnalyticsTrafficSourcesMetricsByGroupIdDateRangePeriods",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": {
									"value": "@pipeline().parameters.GroupId",
									"type": "Expression"
								},
								"DateRangePeriods": {
									"value": "@activity('GenerateDateRangePeriods').output.value",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "RebuildMonthlyAnalyticsOutboundLinkMetrics",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RebuildAnalyticsTrafficSourcesByGroupIdPeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RebuildMonthlyAnalyticsOutboundLinkMetricsByGroupIdDateRangePeriods",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": {
									"value": "@pipeline().parameters.GroupId",
									"type": "Expression"
								},
								"DateRangePeriods": {
									"value": "@activity('GenerateDateRangePeriods').output.value",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "RebuildMonthlyExternalReferringDomainMetrics",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RebuildMonthlyAnalyticsOutboundLinkMetrics",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RebuildMonthlyAnalyticsExternalReferringDomainMetricsByGroupIdDateRangePeriods",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GroupId": {
									"value": "@pipeline().parameters.GroupId",
									"type": "Expression"
								},
								"DateRangePeriods": {
									"value": "@activity('GenerateDateRangePeriods').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"StartDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RebuildAnalyticsHistoricalMetricsByGroupIdDateRangePeriods')]",
				"[concat(variables('factoryId'), '/pipelines/RebuildAnalyticsTrafficSourcesMetricsByGroupIdDateRangePeriods')]",
				"[concat(variables('factoryId'), '/pipelines/RebuildMonthlyAnalyticsOutboundLinkMetricsByGroupIdDateRangePeriods')]",
				"[concat(variables('factoryId'), '/pipelines/RebuildMonthlyAnalyticsExternalReferringDomainMetricsByGroupIdDateRangePeriods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RebuildAnalyticsHistoricalMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GenerateDateRangePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[web_analytics].[generate_date_range_periods]",
								"storedProcedureParameters": {
									"end_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.EndDate",
											"type": "Expression"
										}
									},
									"start_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.StartDate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DateRangePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GenerateDateRangePeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GenerateDateRangePeriods').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExtractAnalyticsHistoricalMetricsByPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsHistoricalMetricsByPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@{item().date_range_period}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"StartDate": {
						"type": "string"
					},
					"EndDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsHistoricalMetricsByPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RebuildAnalyticsHistoricalMetricsByGroupIdDateRangePeriods')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DateRangePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GroupIdFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.DateRangePeriods",
								"type": "Expression"
							},
							"batchCount": 5,
							"activities": [
								{
									"name": "ExtractByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsHistoricalMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@pipeline().parameters.GroupId",
												"type": "Expression"
											},
											"Period": {
												"value": "@item().date_range_period",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GroupIdFolder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AnalyticsHistoricalMetricsByGroupIdFolderDataset",
								"type": "DatasetReference",
								"parameters": {
									"GroupId": {
										"value": "@pipeline().parameters.GroupId",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "GroupIdFolderExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GroupIdFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GroupIdFolder').output.exists, true)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DeleteGroupIdFolder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "AnalyticsHistoricalMetricsByGroupIdFolderDataset",
											"type": "DatasetReference",
											"parameters": {
												"GroupId": {
													"value": "@pipeline().parameters.GroupId",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"DateRangePeriods": {
						"type": "array"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AnalyticsHistoricalMetricsByGroupIdFolderDataset')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsHistoricalMetricsByGroupIdPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RebuildAnalyticsTrafficSourcesMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GenerateDateRangePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[web_analytics].[generate_date_range_periods]",
								"storedProcedureParameters": {
									"end_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.EndDate",
											"type": "Expression"
										}
									},
									"start_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.StartDate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DateRangePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GenerateDateRangePeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GenerateDateRangePeriods').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExtractAnalyticsTrafficSourcesMetricsByPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsTrafficSourcesMetricsByPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@{item().date_range_period}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"StartDate": {
						"type": "string"
					},
					"EndDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsTrafficSourcesMetricsByPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RebuildAnalyticsTrafficSourcesMetricsByGroupIdDateRangePeriods')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DateRangePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GroupIdFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.DateRangePeriods",
								"type": "Expression"
							},
							"batchCount": 5,
							"activities": [
								{
									"name": "ExtractByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsTrafficSourcesMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@pipeline().parameters.GroupId",
												"type": "Expression"
											},
											"Period": {
												"value": "@item().date_range_period",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GroupIdFolder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AnalyticsTrafficSourcesMetricsByGroupIdFolderDataset",
								"type": "DatasetReference",
								"parameters": {
									"GroupId": {
										"value": "@pipeline().parameters.GroupId",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "GroupIdFolderExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GroupIdFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GroupIdFolder').output.exists, true)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DeleteGroupIdFolder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "AnalyticsTrafficSourcesMetricsByGroupIdFolderDataset",
											"type": "DatasetReference",
											"parameters": {
												"GroupId": {
													"value": "@pipeline().parameters.GroupId",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"DateRangePeriods": {
						"type": "array"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AnalyticsTrafficSourcesMetricsByGroupIdFolderDataset')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsTrafficSourcesMetricsByGroupIdPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RebuildMonthlyAnalyticsExternalReferringDomainMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GenerateDateRangePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[web_analytics].[generate_date_range_periods]",
								"storedProcedureParameters": {
									"end_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.EndDate",
											"type": "Expression"
										}
									},
									"start_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.StartDate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DateRangePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GenerateDateRangePeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GenerateDateRangePeriods').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExtractByPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@{item().date_range_period}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"StartDate": {
						"type": "string"
					},
					"EndDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RebuildMonthlyAnalyticsExternalReferringDomainMetricsByGroupIdDateRangePeriods')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DateRangePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GroupIdFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.DateRangePeriods",
								"type": "Expression"
							},
							"batchCount": 30,
							"activities": [
								{
									"name": "ExtractByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@pipeline().parameters.GroupId",
												"type": "Expression"
											},
											"Period": {
												"value": "@item().date_range_period",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GroupIdFolder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "MonthlyAnalyticsExternalReferringDomainMetricsByGroupIdFolderDataset",
								"type": "DatasetReference",
								"parameters": {
									"GroupId": {
										"value": "@pipeline().parameters.GroupId",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "GroupIdFolderExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GroupIdFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GroupIdFolder').output.exists, true)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DeleteGroupIdFolder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "MonthlyAnalyticsExternalReferringDomainMetricsByGroupIdFolderDataset",
											"type": "DatasetReference",
											"parameters": {
												"GroupId": {
													"value": "@pipeline().parameters.GroupId",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"DateRangePeriods": {
						"type": "array"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MonthlyAnalyticsExternalReferringDomainMetricsByGroupIdFolderDataset')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByGroupIdPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RebuildMonthlyAnalyticsOutboundLinkMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GenerateDateRangePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[web_analytics].[generate_date_range_periods]",
								"storedProcedureParameters": {
									"end_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.EndDate",
											"type": "Expression"
										}
									},
									"start_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.StartDate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DateRangePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GenerateDateRangePeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GenerateDateRangePeriods').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExtractMonthlyAnalyticsOutboundLinkMetricsByPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsOutboundLinkMetricsByPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@{item().date_range_period}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"StartDate": {
						"type": "string"
					},
					"EndDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsOutboundLinkMetricsByPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RebuildMonthlyAnalyticsOutboundLinkMetricsByGroupIdDateRangePeriods')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DateRangePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GroupIdFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.DateRangePeriods",
								"type": "Expression"
							},
							"batchCount": 30,
							"activities": [
								{
									"name": "ExtractByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsOutboundLinkMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"GroupId": {
												"value": "@pipeline().parameters.GroupId",
												"type": "Expression"
											},
											"Period": {
												"value": "@item().date_range_period",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GroupIdFolder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "MonthlyAnalyticsOutboundLinkMetricsByGroupIdFolderDataset",
								"type": "DatasetReference",
								"parameters": {
									"GroupId": {
										"value": "@pipeline().parameters.GroupId",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "GroupIdFolderExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GroupIdFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GroupIdFolder').output.exists, true)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DeleteGroupIdFolder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "MonthlyAnalyticsOutboundLinkMetricsByGroupIdFolderDataset",
											"type": "DatasetReference",
											"parameters": {
												"GroupId": {
													"value": "@pipeline().parameters.GroupId",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"DateRangePeriods": {
						"type": "array"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MonthlyAnalyticsOutboundLinkMetricsByGroupIdFolderDataset')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsOutboundLinkMetricsByGroupIdPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshAnalyticsGroupsAnalyticsPages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GenerateDateRangePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[web_analytics].[generate_date_range_periods]",
								"storedProcedureParameters": {
									"end_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.EndDate",
											"type": "Expression"
										}
									},
									"start_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.StartDate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DateRangePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GenerateDateRangePeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "RawFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "StagingFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GenerateDateRangePeriods').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ExtractAnalyticsGroupsAnalyticsPagesByGroupsPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsGroupsAnalyticsPagesByGroupsPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@{item().date_range_period}",
												"type": "Expression"
											},
											"AnalyticsGroups": {
												"value": "@activity('LookupAnalyticsGroups').output.value",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "RawFolder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AnalyticsGroupsAnalyticsPagesStageFolderCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"Stage": "raw"
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "RawFolderExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "RawFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('RawFolder').output.exists, true)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DeleteRawFolder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "AnalyticsGroupsAnalyticsPagesStageFolderCsvDataset",
											"type": "DatasetReference",
											"parameters": {
												"Stage": "raw"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "StagingFolder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AnalyticsGroupsAnalyticsPagesStageFolderCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"Stage": "staging"
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "StagingFolderExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "StagingFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('StagingFolder').output.exists, true)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DeleteStagingFolder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "AnalyticsGroupsAnalyticsPagesStageFolderCsvDataset",
											"type": "DatasetReference",
											"parameters": {
												"Stage": "staging"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "PostProcessAnalyticsGroupsAnalyticsPages",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DateRangePeriod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PostProcessAnalyticsGroupsAnalyticsPages",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"parameters": {
					"StartDate": {
						"type": "string"
					},
					"EndDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshTriggers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetWhoIsVisitingToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{pipeline().globalParameters.WhoIsVisitingTokenSecretIdentifierURL}?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ExtractTriggers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetWhoIsVisitingToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$"
										},
										"sink": {
											"path": "$"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "WivTriggersRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"Token": {
										"value": "@activity('GetWhoIsVisitingToken').output.value",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "WivTriggersJsonDataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "LoadTriggers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ExtractTriggers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE web_analytics.triggers",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "WivTriggersJsonDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ParameterizedSqlTable",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "web_analytics",
									"Table": "triggers"
								}
							}
						]
					}
				],
				"folder": {
					"name": "wiv"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WivTriggersRestDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AnalyticsHistoricalMetricsByGroupIdFolderDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"GroupId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "analytics_historical_metrics/analytics_group_@{dataset().GroupId}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AnalyticsHistoricalMetricsDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					},
					"FilterId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "analytics_filter_@{dataset().FilterId}.json",
							"type": "Expression"
						},
						"folderPath": {
							"value": "analytics_historical_metrics/analytics_group_@{dataset().GroupId}/@{dataset().Period}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AnalyticsHistoricalMetricsRestDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SiteImproveRestLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"QueryString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "v2/sites/17536213616/analytics/overview/history?page=1&page_size=1000&@{dataset().QueryString}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AnalyticsTrafficSourcesMetricsByGroupIdFolderDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"GroupId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "analytics_traffic_sources_metrics/analytics_group_@{dataset().GroupId}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AnalyticsTrafficSourcesMetricsDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					},
					"FilterId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "analytics_filter_@{dataset().FilterId}.json",
							"type": "Expression"
						},
						"folderPath": {
							"value": "analytics_traffic_sources_metrics/analytics_group_@{dataset().GroupId}/@{dataset().Period}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AnalyticsTrafficSourcesMetricsRestDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SiteImproveRestLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"QueryString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "v2/sites/17536213616/analytics/traffic_sources/summary/history?page=1&page_size=1000&@{dataset().QueryString}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MonthlyAnalyticsExternalReferringDomainMetricsByGroupIdFolderDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"GroupId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "monthly_analytics_external_referring_domain_metrics/analytics_group_@{dataset().GroupId}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MonthlyAnalyticsExternalReferringDomainMetricsDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{dataset().Period}.json",
							"type": "Expression"
						},
						"folderPath": {
							"value": "monthly_analytics_external_referring_domain_metrics/analytics_group_@{dataset().GroupId}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MonthlyAnalyticsOutboundLinkMetricsByGroupIdFolderDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"GroupId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "monthly_analytics_outbound_link_metrics/analytics_group_@{dataset().GroupId}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MonthlyAnalyticsOutboundLinkMetricsDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"GroupId": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{dataset().Period}.json",
							"type": "Expression"
						},
						"folderPath": {
							"value": "monthly_analytics_outbound_link_metrics/analytics_group_@{dataset().GroupId}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MonthlyAnalyticsOutboundLinkMetricsRestDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SiteImproveRestLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"QueryString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "v2/sites/17536213616/analytics/content/outbound_links?page=1&page_size=1000&@{dataset().QueryString}&filter_id=1717697832",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WivTriggersRestDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WhoIsVisitingRestLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Token": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "api/v1/accounts/25508/triggers?token=@{dataset().Token}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}