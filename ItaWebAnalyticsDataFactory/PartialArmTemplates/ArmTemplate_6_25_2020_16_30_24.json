{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ItaWebAnalyticsDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsRegionMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractByPeriod",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Period Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "analytics_group_id",
										"value": "1"
									},
									{
										"name": "date",
										"value": {
											"value": "@{pipeline().parameters.Period}",
											"type": "Expression"
										}
									},
									{
										"name": "country_id",
										"value": {
											"value": "@{pipeline().parameters.CountryId}",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "region_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['bounce_rate']"
										},
										"sink": {
											"name": "bounce_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['is_unknown']"
										},
										"sink": {
											"name": "is_unknown",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['region']"
										},
										"sink": {
											"name": "region",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['visits_of_parent']"
										},
										"sink": {
											"name": "visits",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"name": "analytics_group_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"name": "date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['country_id']"
										},
										"sink": {
											"name": "country_id",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "AnalyticsRegionMetricsRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": {
										"value": "page=1&page_size=1000&period=@{pipeline().parameters.Period}",
										"type": "Expression"
									},
									"CountryId": {
										"value": "@{pipeline().parameters.CountryId}",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AnalyticsRegionMetricsByPeriodCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"Period": {
										"value": "@{pipeline().parameters.Period}",
										"type": "Expression"
									},
									"FileName": {
										"value": "analytics_group_1.csv",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ExtractByPeriodGroupId",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExtractByPeriod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsRegionMetricsByGroupId",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Period": {
									"value": "@{pipeline().parameters.Period}",
									"type": "Expression"
								},
								"CountryId": {
									"value": "@{pipeline().parameters.CountryId}",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete Period Folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Prevent Delete from failing when folder is empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AnalyticsRegionMetricsByPeriodFolderDataset",
								"type": "DatasetReference",
								"parameters": {
									"Period": {
										"value": "@{pipeline().parameters.Period}",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "Prevent Delete from failing when folder is empty",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AnalyticsRegionMetricsByPeriodCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"Period": {
										"value": "@{pipeline().parameters.Period}",
										"type": "Expression"
									},
									"FileName": "filler.csv"
								}
							}
						]
					}
				],
				"concurrency": 3,
				"parameters": {
					"Period": {
						"type": "string"
					},
					"CountryId": {
						"type": "string",
						"defaultValue": "3229"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractAnalyticsRegionMetricsByGroupId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsRegionMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExtractAnalyticsRegionMetrics",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "analytics_group_id",
													"value": {
														"value": "@{item().id}",
														"type": "Expression"
													}
												},
												{
													"name": "date",
													"value": {
														"value": "@{pipeline().parameters.Period}",
														"type": "Expression"
													}
												},
												{
													"name": "country_id",
													"value": {
														"value": "@pipeline().parameters.CountryId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"AbsoluteUrl": "$.links.next.href"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "region_id",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['bounce_rate']"
													},
													"sink": {
														"name": "bounce_rate",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['is_unknown']"
													},
													"sink": {
														"name": "is_unknown",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"path": "[['region']"
													},
													"sink": {
														"name": "region",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['visits_of_parent']"
													},
													"sink": {
														"name": "visits",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['analytics_group_id']"
													},
													"sink": {
														"name": "analytics_group_id",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['country_id']"
													},
													"sink": {
														"name": "country_id",
														"type": "Int64"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "AnalyticsRegionMetricsRestDataset",
											"type": "DatasetReference",
											"parameters": {
												"QueryString": {
													"value": "page=1&page_size=1000&period=@{pipeline().parameters.Period}&group_id=@{item().id}",
													"type": "Expression"
												},
												"CountryId": {
													"value": "@{pipeline().parameters.CountryId}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AnalyticsRegionMetricsByPeriodCsvDataset",
											"type": "DatasetReference",
											"parameters": {
												"Period": {
													"value": "@{pipeline().parameters.Period}",
													"type": "Expression"
												},
												"FileName": {
													"value": "analytics_group_@{item().id}.csv",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					},
					"CountryId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractFromRestApiPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteExtractAnalyticsRelatedDatasets",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsDatasetsByDateRangePeriod",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecuteLoadAnalyticsRelatedDatasets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecuteTransformAnalyticsRelatedDatasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LoadAnalyticsRelatedDatasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecuteTransformAnalyticsRelatedDatasets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecuteExtractAnalyticsRelatedDatasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TransformAnalyticsDatasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								}
							}
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractQualityAssuranceSummaryMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Prevent Delete from failing when folder is empty",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ContentGroupsCsvDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "QualityAssuranceSummaryMetricsCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "filler.csv"
								}
							}
						]
					},
					{
						"name": "Delete Folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Prevent Delete from failing when folder is empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "QualityAssuranceSummaryMetricsFolderDataset",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "ExtractWithoutGroupId",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "content_group_id",
										"value": "1"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['broken_links']"
										},
										"sink": {
											"name": "broken_links",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['broken_links_delta']"
										},
										"sink": {
											"name": "broken_links_delta",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['clicks_on_broken_links']"
										},
										"sink": {
											"name": "clicks_on_broken_links",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['misspellings']"
										},
										"sink": {
											"name": "misspellings",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['misspellings_delta']"
										},
										"sink": {
											"name": "misspellings_delta",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['pages']"
										},
										"sink": {
											"name": "pages",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['pages_affected_by_broken_links']"
										},
										"sink": {
											"name": "pages_affected_by_broken_links",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['pages_affected_by_misspellings']"
										},
										"sink": {
											"name": "pages_affected_by_misspellings",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['potential_misspellings']"
										},
										"sink": {
											"name": "potential_misspellings",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['content_group_id']"
										},
										"sink": {
											"name": "content_group_id",
											"type": "Int64"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "QualityAssuranceSummaryMetricsRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": "page=1&page_size=1000"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "QualityAssuranceSummaryMetricsCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "content_group_1.csv"
								}
							}
						]
					},
					{
						"name": "ExtractByGroupId",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExtractWithoutGroupId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractQualityAssuranceSummaryMetricsByGroupId",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"folder": {
					"name": "quality_assurance"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/QualityAssuranceSummaryMetricsCsvDataset')]",
				"[concat(variables('factoryId'), '/datasets/QualityAssuranceSummaryMetricsFolderDataset')]",
				"[concat(variables('factoryId'), '/datasets/QualityAssuranceSummaryMetricsRestDataset')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractQualityAssuranceSummaryMetricsByGroupId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractQualityAssuranceSummaryMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupContentGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ContentGroupsCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ContentGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupContentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupContentGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExtractQualityAssuranceSummaryMetrics",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "content_group_id",
													"value": {
														"value": "@{item().id}",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['broken_links']"
													},
													"sink": {
														"name": "broken_links",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['broken_links_delta']"
													},
													"sink": {
														"name": "broken_links_delta",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['clicks_on_broken_links']"
													},
													"sink": {
														"name": "clicks_on_broken_links",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['misspellings']"
													},
													"sink": {
														"name": "misspellings",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['misspellings_delta']"
													},
													"sink": {
														"name": "misspellings_delta",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['pages']"
													},
													"sink": {
														"name": "pages",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['pages_affected_by_broken_links']"
													},
													"sink": {
														"name": "pages_affected_by_broken_links",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['pages_affected_by_misspellings']"
													},
													"sink": {
														"name": "pages_affected_by_misspellings",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['potential_misspellings']"
													},
													"sink": {
														"name": "potential_misspellings",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['content_group_id']"
													},
													"sink": {
														"name": "content_group_id",
														"type": "Int64"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "QualityAssuranceSummaryMetricsRestDataset",
											"type": "DatasetReference",
											"parameters": {
												"QueryString": {
													"value": "page=1&page_size=1000&group_id=@{item().id}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "QualityAssuranceSummaryMetricsCsvDataset",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "content_group_@{item().id}.csv",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "quality_assurance"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/QualityAssuranceSummaryMetricsRestDataset')]",
				"[concat(variables('factoryId'), '/datasets/QualityAssuranceSummaryMetricsCsvDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadQualityAssuranceDatasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadContentGroups",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [web_analytics].[content_groups]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "group_name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ContentGroupsCsvDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ContentGroupsSqlDataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "LoadQualityAssuranceInventoryMetrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "quality_assurance_inventory_metrics/transformed",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [web_analytics].[quality_assurance_inventory_metrics]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "content_group_id",
											"type": "String"
										},
										"sink": {
											"name": "content_group_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "String"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "data_category",
											"type": "String"
										},
										"sink": {
											"name": "data_category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "count",
											"type": "String"
										},
										"sink": {
											"name": "count",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RootFolderDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "QualityAssuranceInventoryMetricsSqlDataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "LoadQualityAssuranceSummaryMetrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "quality_assurance_summary_metrics",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [web_analytics].[quality_assurance_summary_metrics]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "content_group_id",
											"type": "String"
										},
										"sink": {
											"name": "content_group_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "broken_links",
											"type": "String"
										},
										"sink": {
											"name": "broken_links",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "broken_links_delta",
											"type": "String"
										},
										"sink": {
											"name": "broken_links_delta",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "clicks_on_broken_links",
											"type": "String"
										},
										"sink": {
											"name": "clicks_on_broken_links",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "misspellings",
											"type": "String"
										},
										"sink": {
											"name": "misspellings",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "misspellings_delta",
											"type": "String"
										},
										"sink": {
											"name": "misspellings_delta",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "pages",
											"type": "String"
										},
										"sink": {
											"name": "pages",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "pages_affected_by_broken_links",
											"type": "String"
										},
										"sink": {
											"name": "pages_affected_by_broken_links",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "pages_affected_by_misspellings",
											"type": "String"
										},
										"sink": {
											"name": "pages_affected_by_misspellings",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "potential_misspellings",
											"type": "String"
										},
										"sink": {
											"name": "potential_misspellings",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RootFolderDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "QualityAssuranceSummaryMetricsSqlDataset",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "quality_assurance"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/QualityAssuranceSummaryMetricsSqlDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QualityAssuranceSummaryMetricsCsvDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "quality_assurance"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{dataset().FileName}",
							"type": "Expression"
						},
						"folderPath": "quality_assurance_summary_metrics",
						"container": "ita-web-analytics"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/QualityAssuranceSummaryMetricsFolderDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "quality_assurance"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "quality_assurance_summary_metrics",
						"container": "ita-web-analytics"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/QualityAssuranceSummaryMetricsRestDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SiteImproveRestLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"QueryString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "quality_assurance"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "v2/sites/17536213616/quality_assurance/overview/summary?@{dataset().QueryString}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/QualityAssuranceSummaryMetricsSqlDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "quality_assurance"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "web_analytics",
					"table": "quality_assurance_summary_metrics"
				}
			},
			"dependsOn": []
		}
	]
}