{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ItaWebAnalyticsDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsExternalReferringDomainMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupDateRangePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "date_range_periods.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "RootFolderDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DateRangePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDateRangePeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDateRangePeriods').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Extract By Period",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@{item().date_range_period}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecuteExtractByGroupId",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											},
											"AnalyticsGroupId": {
												"value": "@{item().id}",
												"type": "Expression"
											},
											"QueryString": {
												"value": "period=@{pipeline().parameters.Period}&group_id=@{item().id}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractByPeriod",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "analytics_group_id",
										"value": {
											"value": "@pipeline().parameters.AnalyticsGroupId",
											"type": "Expression"
										}
									},
									{
										"name": "date",
										"value": {
											"value": "@{substring(pipeline().parameters.Period, 0, 8)}",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['bounce_rate']"
										},
										"sink": {
											"name": "bounce_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['external_referring_domain']"
										},
										"sink": {
											"name": "external_referring_domain",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['referring_pages']"
										},
										"sink": {
											"name": "referring_pages",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['visits']"
										},
										"sink": {
											"name": "visits",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"name": "analytics_group_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"name": "date",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "MonthlyAnalyticsExternalReferringDomainMetricsRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": {
										"value": "@pipeline().parameters.QueryString",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MonthlyAnalyticsExternalReferringDomainMetricsByPeriodCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"Period": {
										"value": "@{pipeline().parameters.Period}",
										"type": "Expression"
									},
									"FileName": {
										"value": "analytics_group_@{pipeline().parameters.AnalyticsGroupId}.csv",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"concurrency": 8,
				"parameters": {
					"Period": {
						"type": "string"
					},
					"AnalyticsGroupId": {
						"type": "string"
					},
					"QueryString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MonthlyAnalyticsExternalReferringDomainMetricsRestDataset')]",
				"[concat(variables('factoryId'), '/datasets/MonthlyAnalyticsExternalReferringDomainMetricsByPeriodCsvDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Period Folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "MonthlyAnalyticsExternalReferringDomainMetricsByPeriodFolderDataset",
								"type": "DatasetReference",
								"parameters": {
									"Period": {
										"value": "@pipeline().parameters.Period",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Period Folder exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Period Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Period Folder').output.exists, true)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Period Folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "MonthlyAnalyticsExternalReferringDomainMetricsByPeriodFolderDataset",
											"type": "DatasetReference",
											"parameters": {
												"Period": {
													"value": "@{pipeline().parameters.Period}",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "ExecuteExtractByPeriod",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Period Folder exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Period": {
									"value": "@pipeline().parameters.Period",
									"type": "Expression"
								},
								"AnalyticsGroupId": "1",
								"QueryString": {
									"value": "period=@{pipeline().parameters.Period}",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExtractByPeriodGroupId",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Period Folder exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByGroupId",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Period": {
									"value": "@{pipeline().parameters.Period}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MonthlyAnalyticsExternalReferringDomainMetricsByPeriodFolderDataset')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByGroupId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractVisitorDetailByParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractVisitorDetail",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "WivVisitorDetailRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"Token": {
										"value": "@pipeline().parameters.Token",
										"type": "Expression"
									},
									"VisitorId": {
										"value": "@pipeline().parameters.VisitorId",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "WivVisitorDetailJsonDataset",
								"type": "DatasetReference",
								"parameters": {
									"VisitorId": {
										"value": "@pipeline().parameters.VisitorId",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"concurrency": 10,
				"parameters": {
					"Token": {
						"type": "string"
					},
					"VisitorId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WivVisitorDetailRestDataset')]",
				"[concat(variables('factoryId'), '/datasets/WivVisitorDetailJsonDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractVisitorDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetWhoIsVisitingToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{pipeline().globalParameters.WhoIsVisitingTokenSecretIdentifierURL}?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "LookupInitialVisitorIdNotInVisitorDetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT(s.visitor_id) as visitorId FROM web_analytics.visitor_sessions s\nWHERE s.visitor_id NOT IN (SELECT d.id FROM web_analytics.visitor_details d)\nORDER BY 1\nOFFSET 0 ROWS\nFETCH NEXT @{variables('fetchRowCount')} ROWS ONLY",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabaseDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Until VisitorIds is empty",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set visitorIds",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetWhoIsVisitingToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('visitorIds'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set tempOffset",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ExecuteExtractVisitorDetailsByVisitorIds",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "tempOffset",
										"value": {
											"value": "@string(add(int(variables('offset')), int(variables('fetchRowCount'))))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set offset",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set tempOffset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "offset",
										"value": {
											"value": "@variables('tempOffset')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "LookupNextVisitorIdNotInVisitorDetails",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set offset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT DISTINCT(s.visitor_id) as visitorId FROM web_analytics.visitor_sessions s\nWHERE s.visitor_id NOT IN (SELECT d.id FROM web_analytics.visitor_details d)\nORDER BY 1\nOFFSET @{variables('offset')} ROWS\nFETCH NEXT @{variables('fetchRowCount')} ROWS ONLY",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDatabaseDataset",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "re-set visitorIds",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "LookupNextVisitorIdNotInVisitorDetails",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "visitorIds",
										"value": {
											"value": "@activity('LookupNextVisitorIdNotInVisitorDetails').output.value",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ExecuteExtractVisitorDetailsByVisitorIds",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractVisitorDetailsByVisitorIds",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"visitorIds": {
												"value": "@variables('visitorIds')",
												"type": "Expression"
											},
											"whoIsVisitingToken": {
												"value": "@activity('GetWhoIsVisitingToken').output.value",
												"type": "Expression"
											}
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set visitorIds",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupInitialVisitorIdNotInVisitorDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "visitorIds",
							"value": {
								"value": "@activity('LookupInitialVisitorIdNotInVisitorDetails').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"offset": {
						"type": "String",
						"defaultValue": "0"
					},
					"visitorIds": {
						"type": "Array"
					},
					"tempOffset": {
						"type": "String",
						"defaultValue": "0"
					},
					"fetchRowCount": {
						"type": "String",
						"defaultValue": "5000"
					}
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDatabaseDataset')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractVisitorDetailsByVisitorIds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractVisitorDetailsByVisitorIds')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachVisitorId",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.visitorIds",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecuteExtractVisitorDetailByParameter",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractVisitorDetailByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Token": {
												"value": "@pipeline().parameters.whoIsVisitingToken",
												"type": "Expression"
											},
											"VisitorId": {
												"value": "@item().visitorId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"visitorIds": {
						"type": "array"
					},
					"whoIsVisitingToken": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractVisitorDetailByParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractVisitorFeed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteExtractFirstPageOfVisitorFeed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetWhoIsVisitingToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If VisitorFeedByDateRangeFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractVisitorFeedByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DateFrom": {
									"value": "@pipeline().parameters.DateFrom",
									"type": "Expression"
								},
								"DateTo": {
									"value": "@pipeline().parameters.DateTo",
									"type": "Expression"
								},
								"Page": "1",
								"Token": {
									"value": "@activity('GetWhoIsVisitingToken').output.value",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "LookupCurrentPageResponse",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ExecuteExtractFirstPageOfVisitorFeed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "WivVisitorFeedJsonDataset",
								"type": "DatasetReference",
								"parameters": {
									"DateFrom": {
										"value": "@pipeline().parameters.DateFrom",
										"type": "Expression"
									},
									"DateTo": {
										"value": "@pipeline().parameters.DateTo",
										"type": "Expression"
									},
									"Page": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachPage",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupCurrentPageResponse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,activity('LookupCurrentPageResponse').output.value[0].pagination.pagesCount)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecuteExtractVisitorFeedByParameters",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractVisitorFeedByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DateFrom": {
												"value": "@pipeline().parameters.DateFrom",
												"type": "Expression"
											},
											"DateTo": {
												"value": "@pipeline().parameters.DateTo",
												"type": "Expression"
											},
											"Page": {
												"value": "@item()",
												"type": "Expression"
											},
											"Token": {
												"value": "@activity('GetWhoIsVisitingToken').output.value",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GetWhoIsVisitingToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{pipeline().globalParameters.WhoIsVisitingTokenSecretIdentifierURL}?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetVisitorFeedByDateRangeJsonFolderMetadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "WivVisitorFeedByDateRangeJsonFolderDataset",
								"type": "DatasetReference",
								"parameters": {
									"DateFrom": {
										"value": "@pipeline().parameters.DateFrom",
										"type": "Expression"
									},
									"DateTo": {
										"value": "@pipeline().parameters.DateTo",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If VisitorFeedByDateRangeFolderExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetVisitorFeedByDateRangeJsonFolderMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('GetVisitorFeedByDateRangeJsonFolderMetadata').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DeleteVisitorFeedByDateRangeJsonFolder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "WivVisitorFeedByDateRangeJsonFolderDataset",
											"type": "DatasetReference",
											"parameters": {
												"DateFrom": {
													"value": "@pipeline().parameters.DateFrom",
													"type": "Expression"
												},
												"DateTo": {
													"value": "@pipeline().parameters.DateTo",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"DateFrom": {
						"type": "string"
					},
					"DateTo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WivVisitorFeedByDateRangeJsonFolderDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadWhoIsVisiting')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadSessions",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "visitor_feed",
									"wildcardFileName": "*.json"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE web_analytics.visitor_sessions",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['visitorId']"
										},
										"sink": {
											"name": "visitor_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['sessionStart']"
										},
										"sink": {
											"name": "session_start",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['pageViews']"
										},
										"sink": {
											"name": "page_views",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['duration']"
										},
										"sink": {
											"name": "duration",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['source']"
										},
										"sink": {
											"name": "source",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['firstVisit']"
										},
										"sink": {
											"name": "first_visit",
											"type": "Boolean"
										}
									}
								],
								"collectionReference": "$['sessions']"
							}
						},
						"inputs": [
							{
								"referenceName": "RootJsonFolderDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "WivVisitorSessionsSqlDataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "LoadVisitors",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE web_analytics.visitors",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "countryShortName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_short_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "region",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "firstVisited",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "first_visited",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "company",
											"type": "Boolean",
											"physicalType": "String"
										},
										"sink": {
											"name": "company",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ignored",
											"type": "Boolean",
											"physicalType": "String"
										},
										"sink": {
											"name": "ignored",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WivDedupedVisitorsCsvDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "WivVisitorsSqlDataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "LoadVisitorDetails",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "visitor_details",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE web_analytics.visitor_details",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['data']['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['data']"
										},
										"sink": {
											"name": "json",
											"type": "String"
										}
									}
								],
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "RootJsonFolderDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "WivVisitorDetailsSqlDataset",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "wiv"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WivVisitorDetailsSqlDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshWhoIsVisiting')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If first day of the month",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(dayOfMonth(convertFromUtc(utcNow(), 'Eastern Standard Time', 's')), 1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set dateFrom to first day of current month",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set firstDayNextMonth",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "dateFrom",
										"value": {
											"value": "@{convertFromUtc(addDays(variables('firstDayNextMonth'), -1), 'Eastern Standard Time', 'yyyy-MM')}-01",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set firstDayNextMonth",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "firstDayNextMonth",
										"value": {
											"value": "@{startOfMonth(getFutureTime(1, 'Month'), 'yyyy-MM-dd')}T10:00:00Z",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set dateTo to end of current month",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set firstDayNextMonth",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "dateTo",
										"value": {
											"value": "@{convertFromUtc(addDays(variables('firstDayNextMonth'), -1), 'Eastern Standard Time', 'yyyy-MM-dd')}",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set dateFrom to first day of last month",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "dateFrom",
										"value": {
											"value": "@{convertFromUtc(addDays(utcNow(), -1), 'Eastern Standard Time', 'yyyy-MM')}-01",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set dateTo to last day of last month",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "dateTo",
										"value": {
											"value": "@{convertFromUtc(addDays(utcNow(), -1), 'Eastern Standard Time', 'yyyy-MM-dd')}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "ExecuteExtractVisitorFeedByDateRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If first day of the month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractVisitorFeed",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DateFrom": {
									"value": "@variables('dateFrom')",
									"type": "Expression"
								},
								"DateTo": {
									"value": "@variables('dateTo')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "LoadSessions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ExecuteExtractVisitorFeedByDateRange",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "visitor_feed",
									"wildcardFileName": "*.json"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE web_analytics.visitor_sessions",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['visitorId']"
										},
										"sink": {
											"name": "visitor_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['sessionStart']"
										},
										"sink": {
											"name": "session_start",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['pageViews']"
										},
										"sink": {
											"name": "page_views",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['duration']"
										},
										"sink": {
											"name": "duration",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['source']"
										},
										"sink": {
											"name": "source",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['firstVisit']"
										},
										"sink": {
											"name": "first_visit",
											"type": "Boolean"
										}
									}
								],
								"collectionReference": "$['sessions']"
							}
						},
						"inputs": [
							{
								"referenceName": "RootJsonFolderDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "WivVisitorSessionsSqlDataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "ExecuteExtractVisitorDetails",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LoadSessions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractVisitorDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "LoadVisitorDetails",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ExecuteExtractVisitorDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "visitor_details",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE web_analytics.visitor_details",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['data']['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['data']"
										},
										"sink": {
											"name": "json",
											"type": "String"
										}
									}
								],
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "RootJsonFolderDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "WivVisitorDetailsSqlDataset",
								"type": "DatasetReference"
							}
						]
					}
				],
				"concurrency": 1,
				"variables": {
					"dateRange": {
						"type": "String"
					},
					"firstDayNextMonth": {
						"type": "String"
					},
					"dateFrom": {
						"type": "String"
					},
					"dateTo": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExtractVisitorFeed')]",
				"[concat(variables('factoryId'), '/pipelines/ExtractVisitorDetails')]",
				"[concat(variables('factoryId'), '/datasets/WivVisitorDetailsSqlDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MonthlyAnalyticsExternalReferringDomainMetricsByPeriodCsvDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Period": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{dataset().FileName}",
							"type": "Expression"
						},
						"folderPath": {
							"value": "monthly_analytics_external_referring_domain_metrics/@{dataset().Period}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MonthlyAnalyticsExternalReferringDomainMetricsByPeriodFolderDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "monthly_analytics_external_referring_domain_metrics/@{dataset().Period}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MonthlyAnalyticsExternalReferringDomainMetricsRestDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SiteImproveRestLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"QueryString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "v2/sites/17536213616/analytics/traffic_sources/external_referring_domains?page=1&page_size=1000&filter_id=1717697832&@{dataset().QueryString}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MonthlyAnalyticsExternalReferringDomainMetricsSqlDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "web_analytics",
					"table": "monthly_analytics_external_referring_domain_metrics"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WivVisitorDetailJsonDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"VisitorId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{dataset().VisitorId}.json",
							"type": "Expression"
						},
						"folderPath": {
							"value": "visitor_details",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WivVisitorDetailRestDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WhoIsVisitingRestLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Token": {
						"type": "string"
					},
					"VisitorId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "api/v1/accounts/25508/visitors/@{dataset().VisitorId}?token=@{dataset().Token}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WivVisitorDetailsSqlDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "web_analytics",
					"table": "visitor_details"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WivVisitorFeedByDateRangeJsonFolderDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DateFrom": {
						"type": "string"
					},
					"DateTo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "visitor_feed/@{dataset().DateFrom}_@{dataset().DateTo}",
							"type": "Expression"
						},
						"container": "ita-web-analytics"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		}
	]
}