{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ItaWebAnalyticsDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsHistoricalMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"batchCount": 2,
							"activities": [
								{
									"name": "ExtractAnalyticsHistoricalMetrics",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "analytics_group_id",
													"value": {
														"value": "@{item().id}",
														"type": "Expression"
													}
												},
												{
													"name": "analytics_filter_id",
													"value": "1"
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"AbsoluteUrl": "$.links.next.href"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['bounce_rate']"
													},
													"sink": {
														"name": "bounce_rate",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['new_visitors']"
													},
													"sink": {
														"name": "new_visitors",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['page_views']"
													},
													"sink": {
														"name": "page_views",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['returning_visitors']"
													},
													"sink": {
														"name": "returning_visitors",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['timestamp']"
													},
													"sink": {
														"name": "timestamp",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['unique_visitors']"
													},
													"sink": {
														"name": "unique_visitors",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['visits']"
													},
													"sink": {
														"name": "visits",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "$['analytics_group_id']"
													},
													"sink": {
														"name": "analytics_group_id",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "$['analytics_filter_id']"
													},
													"sink": {
														"name": "analytics_filter_id",
														"type": "Int64"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "AnalyticsHistoricalMetricsRestDataset",
											"type": "DatasetReference",
											"parameters": {
												"QueryString": {
													"value": "page=1&page_size=1000&period=@{pipeline().parameters.Period}&group_id=@{item().id}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AnalyticsHistoricalMetricsByPeriodCsvDataset",
											"type": "DatasetReference",
											"parameters": {
												"Period": {
													"value": "@{pipeline().parameters.Period}",
													"type": "Expression"
												},
												"FileName": {
													"value": "analytics_group_@{item().id}.csv",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ExecuteExtractByGroupIdFilterId",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ExtractAnalyticsHistoricalMetrics",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsHistoricalMetricsByGroupIdFilterId",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@{pipeline().parameters.Period}",
												"type": "Expression"
											},
											"GroupId": {
												"value": "@{item().id}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsPageMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupDatePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[web_analytics].[generate_date_periods]",
								"storedProcedureParameters": {
									"endDate": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.EndDate",
											"type": "Expression"
										}
									},
									"startDate": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.StartDate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDatePeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDatePeriods').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecuteExtractAnalyticsPageMetricsByPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsPageMetricsByPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@{item().date_period}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"StartDate": {
						"type": "string"
					},
					"EndDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsRegionMetricsByPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractByPeriod",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "analytics_group_id",
										"value": "1"
									},
									{
										"name": "date",
										"value": {
											"value": "@{pipeline().parameters.Period}",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "region_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['bounce_rate']"
										},
										"sink": {
											"name": "bounce_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['is_unknown']"
										},
										"sink": {
											"name": "is_unknown",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['region']"
										},
										"sink": {
											"name": "region",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['visits_of_parent']"
										},
										"sink": {
											"name": "visits",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['analytics_group_id']"
										},
										"sink": {
											"name": "analytics_group_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"name": "date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['country_id']"
										},
										"sink": {
											"name": "country_id",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "AnalyticsRegionMetricsRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": {
										"value": "period=@{pipeline().parameters.Period}",
										"type": "Expression"
									},
									"CountryId": "3229"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AnalyticsRegionMetricsByGroupIdPeriodCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"Period": {
										"value": "@{pipeline().parameters.Period}",
										"type": "Expression"
									},
									"AnalyticsGroupId": "1"
								}
							}
						]
					},
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute ExtractAnalyticsRegionMetricsByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsRegionMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											},
											"AnalyticsGroupId": {
												"value": "@item().id",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"concurrency": 10,
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsTrafficSourcesMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"batchCount": 2,
							"activities": [
								{
									"name": "ExtractAnalyticsTrafficSourcesMetrics",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "analytics_group_id",
													"value": {
														"value": "@{item().id}",
														"type": "Expression"
													}
												},
												{
													"name": "analytics_filter_id",
													"value": "1"
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"AbsoluteUrl": "$.links.next.href"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['direct_traffic']"
													},
													"sink": {
														"name": "direct_traffic",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['external_referrer']"
													},
													"sink": {
														"name": "external_referrer",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['search_domain']"
													},
													"sink": {
														"name": "search_domain",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['social_media']"
													},
													"sink": {
														"name": "social_media",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['timestamp']"
													},
													"sink": {
														"name": "timestamp",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['analytics_group_id']"
													},
													"sink": {
														"name": "analytics_group_id",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "$['analytics_filter_id']"
													},
													"sink": {
														"name": "analytics_filter_id",
														"type": "Int64"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "AnalyticsTrafficSourcesMetricsRestDataset",
											"type": "DatasetReference",
											"parameters": {
												"QueryString": {
													"value": "page=1&page_size=1000&period=@{pipeline().parameters.Period}&group_id=@{item().id}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AnalyticsTrafficSourcesMetricsByPeriodCsvDataset",
											"type": "DatasetReference",
											"parameters": {
												"Period": {
													"value": "@{pipeline().parameters.Period}",
													"type": "Expression"
												},
												"FileName": {
													"value": "analytics_group_@{item().id}.csv",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ExecuteExtractByGroupIdFilterId",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ExtractAnalyticsTrafficSourcesMetrics",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsTrafficSourcesMetricsByGroupIdFilterId",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@{pipeline().parameters.Period}",
												"type": "Expression"
											},
											"GroupId": {
												"value": "@{item().id}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractAnalyticsVisitLengthMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "ExtractAnalyticsVisitLengthMetrics",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "analytics_group_id",
													"value": {
														"value": "@{item().id}",
														"type": "Expression"
													}
												},
												{
													"name": "analytics_filter_id",
													"value": "1"
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"AbsoluteUrl": "$.links.next.href"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['timestamp']"
													},
													"sink": {
														"name": "timestamp",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['visit_duration_average_in_minutes']"
													},
													"sink": {
														"name": "visit_duration_average_in_minutes",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['analytics_group_id']"
													},
													"sink": {
														"name": "analytics_group_id",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "$['analytics_filter_id']"
													},
													"sink": {
														"name": "analytics_filter_id",
														"type": "Int64"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "AnalyticsVisitLengthMetricsRestDataset",
											"type": "DatasetReference",
											"parameters": {
												"QueryString": {
													"value": "page=1&page_size=1000&period=@{pipeline().parameters.Period}&group_id=@{item().id}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AnalyticsVisitLengthMetricsByPeriodCsvDataset",
											"type": "DatasetReference",
											"parameters": {
												"Period": {
													"value": "@{pipeline().parameters.Period}",
													"type": "Expression"
												},
												"FileName": {
													"value": "analytics_group_@{item().id}.csv",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ExecuteExtractByGroupIdFilterId",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ExtractAnalyticsVisitLengthMetrics",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsVisitLengthMetricsByGroupIdFilterId",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@{pipeline().parameters.Period}",
												"type": "Expression"
											},
											"GroupId": {
												"value": "@{item().id}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractContentPages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Prevent Delete from failing when folder is empty",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ContentGroupsCsvDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ContentPagesCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "filler.csv"
								}
							}
						]
					},
					{
						"name": "Delete Folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Prevent Delete from failing when folder is empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ContentPagesFolderDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "ExtractWithoutGroupId",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ExtractByGroupId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "content_group_id",
										"value": "1"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$.links.next.href"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "[['title']"
										},
										"sink": {
											"name": "title"
										}
									},
									{
										"source": {
											"path": "[['url']"
										},
										"sink": {
											"name": "url"
										}
									},
									{
										"source": {
											"path": "$['content_group_id']"
										},
										"sink": {
											"name": "content_group_id"
										}
									}
								],
								"collectionReference": "$['items']"
							}
						},
						"inputs": [
							{
								"referenceName": "ContentPagesRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": "page=1&page_size=1000"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ContentPagesCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "content_group_1.csv"
								}
							}
						]
					},
					{
						"name": "ExtractByGroupId",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractContentPagesByGroupId",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "content"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractFromAllVisitorFeedJson')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractFromAllVisitorFeedJson",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ExtractFromAllVisitorFeedJson",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"VisitorFeed": {},
									"TriggersVisitorSessions": {},
									"VisitorSessions": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "wiv"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsExternalReferringDomainMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecuteExtractByGroupId",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsExternalReferringDomainMetricsByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											},
											"AnalyticsGroupId": {
												"value": "@{item().id}",
												"type": "Expression"
											},
											"QueryString": {
												"value": "period=@{pipeline().parameters.Period}&group_id=@{item().id}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsHistoricalMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecuteExtractByGroupId",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsHistoricalMetricsByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AnalyticsGroupId": {
												"value": "@{item().id}",
												"type": "Expression"
											},
											"QueryString": {
												"value": "page=1&page_size=1000&group_id=@{item().id}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMonthlyAnalyticsOutboundLinkMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAnalyticsGroups",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AnalyticsGroupsCsvDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AnalyticsGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupAnalyticsGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupAnalyticsGroups').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecuteExtractByGroupId",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractMonthlyAnalyticsOutboundLinkMetricsByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											},
											"AnalyticsGroupId": {
												"value": "@{item().id}",
												"type": "Expression"
											},
											"QueryString": {
												"value": "page=1&page_size=1000&period=@{pipeline().parameters.Period}&group_id=@{item().id}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractQualityAssuranceInventoryMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractWithoutGroup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "content_group_id",
										"value": "1"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['items']"
										},
										"sink": {
											"path": "items"
										}
									},
									{
										"source": {
											"path": "$['content_group_id']"
										},
										"sink": {
											"path": "content_group_id"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "QualityAssuranceInventoryMetricsRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": {
										"value": "page=1&page_size=1000",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "QualityAssuranceInventoryMetricsRawJsonDataset",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "content_group_1.json"
								}
							}
						]
					},
					{
						"name": "ExtractByPeriodGroupId",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExtractWithoutGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractQualityAssuranceInventoryMetricsByGroupId",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Delete Folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Prevent Delete from failing when folder is empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "QualityAssuranceInventoryMetricsRawJsonFolderDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "Prevent Delete from failing when folder is empty",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ContentGroupsCsvDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "QualityAssuranceInventoryMetricsRawJsonFolderDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"concurrency": 1,
				"folder": {
					"name": "quality_assurance"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractQualityAssuranceSummaryMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Prevent Delete from failing when folder is empty",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ContentGroupsCsvDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "QualityAssuranceSummaryMetricsCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "filler.csv"
								}
							}
						]
					},
					{
						"name": "Delete Folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Prevent Delete from failing when folder is empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "QualityAssuranceSummaryMetricsFolderDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "ExtractWithoutGroupId",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "content_group_id",
										"value": "1"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['broken_links']"
										},
										"sink": {
											"name": "broken_links",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['broken_links_delta']"
										},
										"sink": {
											"name": "broken_links_delta",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['clicks_on_broken_links']"
										},
										"sink": {
											"name": "clicks_on_broken_links",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['misspellings']"
										},
										"sink": {
											"name": "misspellings",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['misspellings_delta']"
										},
										"sink": {
											"name": "misspellings_delta",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['pages']"
										},
										"sink": {
											"name": "pages",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['pages_affected_by_broken_links']"
										},
										"sink": {
											"name": "pages_affected_by_broken_links",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['pages_affected_by_misspellings']"
										},
										"sink": {
											"name": "pages_affected_by_misspellings",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['potential_misspellings']"
										},
										"sink": {
											"name": "potential_misspellings",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['content_group_id']"
										},
										"sink": {
											"name": "content_group_id",
											"type": "Int64"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "QualityAssuranceSummaryMetricsRestDataset",
								"type": "DatasetReference",
								"parameters": {
									"QueryString": "page=1&page_size=1000"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "QualityAssuranceSummaryMetricsCsvDataset",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "content_group_1.csv"
								}
							}
						]
					},
					{
						"name": "ExtractByGroupId",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExtractWithoutGroupId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractQualityAssuranceSummaryMetricsByGroupId",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "quality_assurance"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractVisitorDetailsByVisitorIds')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachVisitorId",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.VisitorIds",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecuteExtractVisitorDetailByParameter",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractVisitorDetailByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Token": {
												"value": "@pipeline().parameters.WhoIsVisitingToken",
												"type": "Expression"
											},
											"VisitorId": {
												"value": "@item().visitorId",
												"type": "Expression"
											},
											"Period": {
												"value": "@pipeline().parameters.Period",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"VisitorIds": {
						"type": "array"
					},
					"WhoIsVisitingToken": {
						"type": "string"
					},
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractVisitorFeed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteExtractFirstPageOfVisitorFeed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetWhoIsVisitingToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If VisitorFeedByDateRangeFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If DateFrom and DateTo are equals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractVisitorFeedByParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DateFrom": {
									"value": "@pipeline().parameters.DateFrom",
									"type": "Expression"
								},
								"DateTo": {
									"value": "@pipeline().parameters.DateTo",
									"type": "Expression"
								},
								"Page": "1",
								"Token": {
									"value": "@activity('GetWhoIsVisitingToken').output.value",
									"type": "Expression"
								},
								"Folder": {
									"value": "@variables('folder')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "LookupFirstPageResponse",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ExecuteExtractFirstPageOfVisitorFeed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "WivVisitorFeedJsonDataset",
								"type": "DatasetReference",
								"parameters": {
									"Page": "1",
									"Folder": {
										"value": "@variables('folder')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachPage",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupFirstPageResponse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,activity('LookupFirstPageResponse').output.value[0].pagination.pagesCount)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecuteExtractVisitorFeedByParameters",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractVisitorFeedByParameters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DateFrom": {
												"value": "@pipeline().parameters.DateFrom",
												"type": "Expression"
											},
											"DateTo": {
												"value": "@pipeline().parameters.DateTo",
												"type": "Expression"
											},
											"Page": {
												"value": "@item()",
												"type": "Expression"
											},
											"Token": {
												"value": "@activity('GetWhoIsVisitingToken').output.value",
												"type": "Expression"
											},
											"Folder": {
												"value": "@variables('folder')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GetWhoIsVisitingToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{pipeline().globalParameters.WhoIsVisitingTokenSecretIdentifierURL}?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetVisitorFeedByDateRangeJsonFolderMetadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "If DateFrom and DateTo are equals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "WivVisitorFeedByDateRangeJsonFolderDataset",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@variables('folder')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If VisitorFeedByDateRangeFolderExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetVisitorFeedByDateRangeJsonFolderMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('GetVisitorFeedByDateRangeJsonFolderMetadata').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DeleteVisitorFeedByDateRangeJsonFolder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "WivVisitorFeedByDateRangeJsonFolderDataset",
											"type": "DatasetReference",
											"parameters": {
												"Folder": {
													"value": "@variables('folder')",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "If DateFrom and DateTo are equals",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.DateFrom, pipeline().parameters.DateTo)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set folder to DateFrom_DateTo",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "folder",
										"value": {
											"value": "@{pipeline().parameters.DateFrom}_@{pipeline().parameters.DateTo}",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set folder to DateFrom",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "folder",
										"value": {
											"value": "@pipeline().parameters.DateFrom",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"DateFrom": {
						"type": "string"
					},
					"DateTo": {
						"type": "string"
					}
				},
				"variables": {
					"folder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "wiv"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadDatasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteLoadContentGroupsRelatedDatasets",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LoadQualityAssuranceDatasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteLoadAnalyticsRelatedDatasets",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LoadAnalyticsRelatedDatasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshAnalyticsCountryMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GenerateDatePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[web_analytics].[generate_date_periods]",
								"storedProcedureParameters": {
									"initial_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.StartDate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GenerateDatePeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GenerateDatePeriods').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ExtractAnalyticsCountryMetricsByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsCountryMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@item().date_period",
												"type": "Expression"
											},
											"AnalyticsGroupId": {
												"value": "@pipeline().parameters.AnalyticsGroupId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "LoadAnalyticsCountryMetrics",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DatePeriod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LoadAnalyticsCountryMetrics",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"StartDate": {
						"type": "string",
						"defaultValue": "20200203"
					},
					"AnalyticsGroupId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshAnalyticsRegionMetricsByGroupId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GenerateDatePeriods",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[web_analytics].[generate_date_periods]",
								"storedProcedureParameters": {
									"initial_date": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.StartDate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatePeriod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GenerateDatePeriods",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GenerateDatePeriods').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ExtractAnalyticsRegionMetricsByGroupIdPeriod",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExtractAnalyticsRegionMetricsByGroupIdPeriod",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Period": {
												"value": "@item().date_period",
												"type": "Expression"
											},
											"AnalyticsGroupId": {
												"value": "@pipeline().parameters.AnalyticsGroupId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "LoadAnalyticsRegionMetrics",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DatePeriod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LoadAnalyticsRegionMetrics",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"StartDate": {
						"type": "string",
						"defaultValue": "20200203"
					},
					"AnalyticsGroupId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshWithoutInterval')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteExtractAnalyticsPages",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecuteExtractAnalyticsGroupsFiltersDatasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsPages",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteExtractAnalyticsGroupsAnalyticsPages",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecuteExtractAnalyticsPages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsGroupsAnalyticsPages",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteExtractAnalyticsGroupsFiltersDatasets",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtractAnalyticsGroups",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformAnalyticsBrowsersMetricsByPeriod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UnpivotRawAnalyticsBrowsersMetrics",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UnpivotRawAnalyticsBrowsersMetrics",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"RawAnalyticsBrowsersMetrics": {
										"Period": {
											"value": "@{pipeline().parameters.Period}",
											"type": "Expression"
										}
									},
									"SinkUnpivotedAnalyticsBrowsersMetrics": {
										"Period": {
											"value": "@{pipeline().parameters.Period}",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"parameters": {
					"Period": {
						"type": "string"
					}
				},
				"folder": {
					"name": "analytics"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformQualityAssuranceInventoryMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UnpivotQualityAssuranceInventoryMetrics",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UnpivotQualityAssuranceInventoryMetrics",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"JsonSource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "quality_assurance"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}